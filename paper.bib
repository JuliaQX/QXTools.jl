@article{Bezanson:2017,
	title = {Julia: {A} {Fresh} {Approach} to {Numerical} {Computing}},
	volume = {59},
	issn = {0036-1445},
	shorttitle = {Julia},
	url = {https://epubs.siam.org/doi/10.1137/141000671},
	doi = {10.1137/141000671},
	abstract = {Bridging cultures that have often been distant, Julia combines expertise from the diverse fields of computer science and computational science to create a new approach to numerical  computing. Julia is  designed to be easy and fast and questions notions generally held to be “laws of nature"  by practitioners of numerical computing: {\textbackslash}beginlist {\textbackslash}item  High-level dynamic programs have to be slow. {\textbackslash}item  One must prototype in one language and then rewrite in another language for speed or deployment. {\textbackslash}item There are parts of a system appropriate for the programmer, and other parts that are best left untouched as they have been built by the experts. {\textbackslash}endlist We introduce the  Julia programming language and its design---a  dance between specialization and abstraction. Specialization allows for custom treatment. Multiple dispatch,  a  technique from computer science, picks  the right algorithm for the right circumstance. Abstraction, which is what good computation is really about, recognizes what remains the same after differences are stripped away. Abstractions in mathematics are captured as code through another technique from computer science, generic programming. Julia shows that  one can achieve machine performance without sacrificing human convenience.},
	number = {1},
	urldate = {2019-08-29},
	journal = {SIAM Review},
	author = {Bezanson, J. and Edelman, A. and Karpinski, S. and Shah, V.},
	month = jan,
	year = {2017},
	pages = {65--98},
	file = {Snapshot:/Users/nmoran/Zotero/storage/JA4Q4IDE/141000671.html:text/html;Submitted Version:/Users/nmoran/Zotero/storage/8DQUPYJH/Bezanson et al. - 2017 - Julia A Fresh Approach to Numerical Computing.pdf:application/pdf},
}

@misc{JuliaQX,
  title = {JuliaQX},
  year = {2021},
  publisher = {GitHub},
  journal = {GitHub organization},
  url = {https://github.com/JuliaQX}
}

@article{Luo:2020,
	title = {Yao.jl: {Extensible}, {Efficient} {Framework} for {Quantum} {Algorithm} {Design}},
	volume = {4},
	shorttitle = {Yao.jl},
	url = {https://quantum-journal.org/papers/q-2020-10-11-341/},
	doi = {10.22331/q-2020-10-11-341},
	abstract = {Xiu-Zhe Luo, Jin-Guo Liu, Pan Zhang, and Lei Wang,
Quantum 4, 341 (2020).
We introduce \${\textbackslash}texttt\{Yao\}\$, an extensible, efficient open-source framework for quantum algorithm design. \${\textbackslash}texttt\{Yao\}\$ features generic and differentiable programming of quantum circuits. It a…},
	language = {en-GB},
	urldate = {2021-08-22},
	journal = {Quantum},
	author = {Luo, Xiu-Zhe and Liu, Jin-Guo and Zhang, Pan and Wang, Lei},
	month = oct,
	year = {2020},
	note = {Publisher: Verein zur Förderung des Open Access Publizierens in den Quantenwissenschaften},
	pages = {341},
	file = {Full Text PDF:/Users/nmoran/Zotero/storage/WMXHP8NQ/Luo et al. - 2020 - Yao.jl Extensible, Efficient Framework for Quantu.pdf:application/pdf;Snapshot:/Users/nmoran/Zotero/storage/4KGZ3URH/q-2020-10-11-341.html:text/html},
}
